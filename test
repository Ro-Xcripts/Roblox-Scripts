local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local player = Players.LocalPlayer
local webhookUrl = "https://discord.com/api/webhooks/1291752093387853988/4Xte3V-WEnQotkIPZv173EMATsBRMccyT6Dt20_JOM2EptEHto0S0opxeEykAaBjxOH-"  -- Replace with your Discord webhook URL

-- Function to retrieve and process the latest message from the webhook
local function checkWebhook()
    local success, response = pcall(function()
        return HttpService:GetAsync(webhookUrl)
    end)

    if success then
        local messages = HttpService:JSONDecode(response)

        for _, message in ipairs(messages) do
            -- Look for the teleport command within the message content
            local teleportCommand = message.content:match("game:GetService%('TeleportService%'):TeleportToPlaceInstance%((%d+),%s*['\"]([%w%-]+)['\"]")
            
            if teleportCommand then
                local placeId, serverId = teleportCommand:match("(%d+),%s*['\"]([%w%-]+)['\"]")
                if placeId and serverId then
                    -- Convert placeId to a number and trigger teleport
                    placeId = tonumber(placeId)
                    TeleportService:TeleportToPlaceInstance(placeId, serverId, player)
                    return  -- Exit after teleporting
                end
            end
        end
    else
        warn("Failed to get webhook data: " .. response)  -- Log error if the request fails
    end
end

-- Simulate triggering the webhook check (for example, called when the bot sends a message)
local function onBotMessageReceived()
    checkWebhook()
end

-- Example usage: Call this function when you receive a message from your bot
-- onBotMessageReceived() -- Uncomment this line and call it appropriately in your setup
